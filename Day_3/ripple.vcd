$date
	Sun Sep  7 12:39:29 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ripple $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " cout $end
$var wire 1 ) c3 $end
$var wire 1 * c2 $end
$var wire 1 + c1 $end
$scope module fa0 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % cin $end
$var wire 1 + cout $end
$var wire 1 . sum $end
$var wire 1 / w1 $end
$var wire 1 0 w2 $end
$var wire 1 1 w3 $end
$upscope $end
$scope module fa1 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 4 sum $end
$var wire 1 5 w1 $end
$var wire 1 6 w2 $end
$var wire 1 7 w3 $end
$upscope $end
$scope module fa2 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 : sum $end
$var wire 1 ; w1 $end
$var wire 1 < w2 $end
$var wire 1 = w3 $end
$upscope $end
$scope module fa3 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 ) cin $end
$var wire 1 " cout $end
$var wire 1 @ sum $end
$var wire 1 A w1 $end
$var wire 1 B w2 $end
$var wire 1 C w3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#5
1:
1*
16
1+
b100 !
b100 (
04
1/
1-
13
1,
b11 $
b11 '
b1 #
b1 &
#10
1@
1)
b1000 !
b1000 (
0:
1=
18
b101 #
b101 &
#15
1"
06
17
b0 !
b0 (
0@
1C
03
12
1>
b1 $
b1 '
b1111 #
b1111 &
#20
1<
0/
0=
10
19
0,
08
1%
b101 $
b101 '
b1010 #
b1010 &
#25
